<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sensor Data Report</title>
    
    <!-- Stylesheets -->
    <link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <link rel="stylesheet" href="/styles.css">
    <style>
        .warning-value {
            color: #aa0f1f !important;
            font-weight: bold;
        }
        .warning-toggle {
            background-color: #4CAF50;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            margin-right: 10px;
            margin-bottom: 10px;
        }
        .warning-toggle.disabled {
            background-color: #808080;
        }
        .action-buttons {
            display: flex;
            gap: 5px;
        }
        .action-buttons button {
            padding: 5px 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .edit-btn {
            background-color: #4CAF50;
            color: white;
        }
        .delete-btn {
            background-color: #f44336;
            color: white;
        }
        .add-btn {
            background-color: #2196F3;
            color: white;
            padding: 10px 20px;
            margin-bottom: 10px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0,0,0,0.4);
        }
        .modal-content {
            background-color: #fefefe;
            margin: 15% auto;
            padding: 20px;
            border: 1px solid #888;
            width: 80%;
            max-width: 500px;
            border-radius: 5px;
        }
        .modal-content form {
            display: grid;
            gap: 10px;
        }
        .modal-content input {
            padding: 8px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .modal-buttons {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 15px;
        }
        .close {
            color: #aaa;
            float: right;
            font-size: 28px;
            font-weight: bold;
            cursor: pointer;
        }
        .loading {
            text-align: center;
            padding: 20px;
            font-size: 18px;
        }
        .date-selection {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 20px;
        }
        .date-selection button {
            padding: 8px 16px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        #showData, #exportBtn {
            background-color: #4CAF50;
            color: white;
        }
        .date-selection .add-btn {
            margin-bottom: 0;
        }
        .date-selection .warning-toggle {
            margin: 0;
        }
    </style>
</head>
<body>
    <div class="container">
        <nav class="navigation">
            <button class="nav-toggle">
                <i class="fas fa-bars"></i>
            </button>
            <div class="nav-links">
                <a href="/">
                    <i class="fas fa-home"></i> Home
                </a>
                <a href="/chart">
                    <i class="fas fa-chart-line"></i> Biểu Đồ
                </a>
                <a href="/map">
                    <i class="fas fa-map-marker-alt"></i> Bản Đồ
                </a>
                <a href="/growing-areas">
                    <i class="fas fa-seedling"></i> Vùng Trồng
                </a>
                <a href="/devices">
                    <i class="fas fa-key"></i> API key
                </a>
                <a href="/logout">
                    <i class="fas fa-sign-out-alt"></i> Đăng xuất
                </a>
            </div>
        </nav>

        <div class="page-header">
            <h1>Bảng Dữ Liệu</h1>
        </div>

        <div class="date-selection">
            <span>Chọn từ ngày: </span>
            <input type="date" id="fromDate" name="fromDate">
            <span>Chọn tới ngày: </span>
            <input type="date" id="toDate" name="toDate">
            <button type="button" id="showData">Lọc dữ liệu</button>
            <button type="button" id="exportBtn">Xuất dữ liệu</button>
            <button class="add-btn" onclick="openAddModal()">
                <i class="fas fa-plus"></i> Thêm dữ liệu
            </button>
            <button class="warning-toggle disabled" id="warningToggle">
                <i class="fas fa-exclamation-triangle"></i> Cảnh báo
            </button>
        </div>

        <div class="table-responsive">
            <table id="dataTable" class="display">
                <thead>
                    <tr>
                        <th>Raw Timestamp</th>
                        <th>Ngày</th>
                        <th>Giờ</th>
                        <th>Độ ẩm</th>
                        <th>Nhiệt độ</th>
                        <th>Độ dẫn điện</th>
                        <th>pH</th>
                        <th>Nito</th>
                        <th>Photpho</th>
                        <th>Kali</th>
                        <th>Vị trí</th>
                        <th>Hành động</th>
                    </tr>
                </thead>
                <tbody>
                </tbody>
            </table>
        </div>
    </div>

    <!-- Edit Modal -->
    <div id="editModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeEditModal()">&times;</span>
            <h2>Edit Data</h2>
            <form id="editForm">
                <input type="hidden" id="editId">
                <input type="number" id="editHumidity" placeholder="Humidity" step="0.01" required>
                <input type="number" id="editTemperature" placeholder="Temperature" step="0.01" required>
                <input type="number" id="editConductivity" placeholder="Conductivity" step="0.01" required>
                <input type="number" id="editPh" placeholder="pH" step="0.01" required>
                <input type="number" id="editNitrogen" placeholder="Nitrogen" step="0.01" required>
                <input type="number" id="editPhosphorus" placeholder="Phosphorus" step="0.01" required>
                <input type="number" id="editPotassium" placeholder="Potassium" step="0.01" required>
                <input type="text" id="editLocation" placeholder="Location">
                <div class="modal-buttons">
                    <button type="button" onclick="closeEditModal()">Cancel</button>
                    <button type="submit">Save Changes</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Add Modal -->
    <div id="addModal" class="modal">
        <div class="modal-content">
            <span class="close" onclick="closeAddModal()">&times;</span>
            <h2>Add New Data</h2>
            <form id="addForm">
                <input type="number" id="addHumidity" placeholder="Humidity" step="0.01" required>
                <input type="number" id="addTemperature" placeholder="Temperature" step="0.01" required>
                <input type="number" id="addConductivity" placeholder="Conductivity" step="0.01" required>
                <input type="number" id="addPh" placeholder="pH" step="0.01" required>
                <input type="number" id="addNitrogen" placeholder="Nitrogen" step="0.01" required>
                <input type="number" id="addPhosphorus" placeholder="Phosphorus" step="0.01" required>
                <input type="number" id="addPotassium" placeholder="Potassium" step="0.01" required>
                <input type="text" id="addLocation" placeholder="Location">
                <div class="modal-buttons">
                    <button type="button" onclick="closeAddModal()">Cancel</button>
                    <button type="submit">Add Data</button>
                </div>
            </form>
        </div>
    </div>

    <script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
    <script>
        let dataTable;

        $(document).ready(function() {
            // Mobile Navigation Toggle
            $('.nav-toggle').click(function(e) {
                e.stopPropagation();
                $('.nav-links').toggleClass('active');
            });

            // Close mobile menu when clicking outside
            $(document).click(function(e) {
                if (!$(e.target).closest('.navigation').length) {
                    $('.nav-links').removeClass('active');
                }
            });

            // Set active navigation item
            $('.nav-links a').each(function() {
                if ($(this).attr('href') === window.location.pathname) {
                    $(this).addClass('active');
                }
            });

            let warningsEnabled = false;

            // Warning toggle functionality
            $('#warningToggle').click(function() {
                warningsEnabled = !warningsEnabled;
                $(this).toggleClass('disabled');
                loadData(false); // Reload table with new warning state
            });

            // Load data function
            window.loadData = function(useFilters = false) {
                let url = '/api/data/dashboard';
                
                if (useFilters) {
                    const fromDate = $('#fromDate').val();
                    const toDate = $('#toDate').val();
                    
                    if (!fromDate || !toDate) {
                        alert('Please select both dates');
                        return;
                    }
                    url += `?fromDate=${fromDate}&toDate=${toDate}`;
                }

                $.ajax({
                    url: url,
                    method: 'GET',
                    success: function(data) {
                        initializeDataTable(data);
                    },
                    error: function(xhr) {
                        alert('Error loading data');
                    }
                });
            };

            // Initialize DataTable
            function initializeDataTable(data) {
                if (dataTable) {
                    dataTable.destroy();
                }

                dataTable = $('#dataTable').DataTable({
                    data: data,
                    columns: [
                        { 
                            data: 'created_at',
                            visible: false
                        },
                        { 
                            data: 'created_at',
                            render: function(data) {
                                return new Date(data).toLocaleDateString();
                            }
                        },
                        { 
                            data: 'created_at',
                            render: function(data) {
                                return new Date(data).toLocaleTimeString();
                            }
                        },
                        { 
                            data: 'humidity',
                            render: function(data) {
                                const isWarning = data < 40 || data > 90;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'temperature',
                            render: function(data) {
                                const isWarning = data < 15 || data > 35;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'conductivity',
                            render: function(data) {
                                const isWarning = data < 0.5 || data > 3;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'ph',
                            render: function(data) {
                                const isWarning = data < 5.0 || data > 8;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'nitrogen',
                            render: function(data) {
                                const isWarning = data < 100 || data > 400;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'phosphorus',
                            render: function(data) {
                                const isWarning = data < 20 || data > 80;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'potassium',
                            render: function(data) {
                                const isWarning = data < 100 || data > 400;
                                return `<span class="${(isWarning && warningsEnabled) ? 'warning-value' : ''}">${data}</span>`;
                            }
                        },
                        { 
                            data: 'location',
                            render: function(data) {
                                return data || 'N/A';
                            }
                        },
                        {
                            data: 'id',
                            render: function(data) {
                                return `
                                    <div class="action-buttons">
                                        <button class="edit-btn" onclick="openEditModal(this)" data-id="${data}">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button class="delete-btn" onclick="deleteRow(${data})">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                `;
                            }
                        }
                    ],
                    pageLength: 10,
                    lengthMenu: [[5, 10, 25, 50, 100, -1], [5, 10, 25, 50, 100, 'All']],
                    order: [[0, 'desc']],
                    language: {
                        lengthMenu: "Hiển thị _MENU_ mục mỗi trang",
                        info: "Hiển thị _START_ tới _END_ của _TOTAL_ mục",
                        paginate: {
                            first: "First",
                            last: "Last",
                            next: "Sau",
                            previous: "Trước"
                        },
                        search: "Search:",
                        zeroRecords: "No matching records found"
                    }
                });
            }

            // Handle show data button click
            $('#showData').click(function() {
                loadData(true);
            });

            // Handle export button click
            $('#exportBtn').click(function() {
                const fromDate = $('#fromDate').val();
                const toDate = $('#toDate').val();
                
                if (!fromDate || !toDate) {
                    alert('Please select both dates');
                    return;
                }

                window.location.href = `/api/data/export?fromDate=${fromDate}&toDate=${toDate}`;
            });

            // Set default dates and load initial data
            function setDefaultDates() {
                const today = new Date();
                const thirtyDaysAgo = new Date(today);
                thirtyDaysAgo.setDate(today.getDate() - 30);

                $('#fromDate').val(thirtyDaysAgo.toISOString().split('T')[0]);
                $('#toDate').val(today.toISOString().split('T')[0]);
                
                loadData(false);
            }

            setDefaultDates();

            // Handle edit form submission
            $('#editForm').on('submit', function(e) {
                e.preventDefault();
                const id = $('#editId').val();
                const data = {
                    humidity: $('#editHumidity').val(),
                    temperature: $('#editTemperature').val(),
                    conductivity: $('#editConductivity').val(),
                    ph: $('#editPh').val(),
                    nitrogen: $('#editNitrogen').val(),
                    phosphorus: $('#editPhosphorus').val(),
                    potassium: $('#editPotassium').val(),
                    location: $('#editLocation').val()
                };

                $.ajax({
                    url: `/api/data/${id}`,
                    method: 'PUT',
                    data: data,
                    success: function(response) {
                        alert('Data updated successfully');
                        closeEditModal();
                        loadData(false);
                    },
                    error: function(xhr) {
                        alert('Error updating data');
                    }
                });
            });

            // Handle add form submission
            $('#addForm').on('submit', function(e) {
                e.preventDefault();
                const data = {
                    humidity: $('#addHumidity').val(),
                    temperature: $('#addTemperature').val(),
                    conductivity: $('#addConductivity').val(),
                    ph: $('#addPh').val(),
                    nitrogen: $('#addNitrogen').val(),
                    phosphorus: $('#addPhosphorus').val(),
                    potassium: $('#addPotassium').val(),
                    location: $('#addLocation').val()
                };

                $.ajax({
                    url: '/api/data',
                    method: 'POST',
                    data: data,
                    success: function(response) {
                        alert('Data added successfully');
                        closeAddModal();
                        loadData(false);
                    },
                    error: function(xhr) {
                        alert('Error adding data');
                    }
                });
            });
        });

        // Modal functions
        function openEditModal(button) {
            const id = $(button).data('id');
            const row = dataTable.row($(button).closest('tr')).data();

            $('#editId').val(id);
            $('#editHumidity').val(row.humidity);
            $('#editTemperature').val(row.temperature);
            $('#editConductivity').val(row.conductivity);
            $('#editPh').val(row.ph);
            $('#editNitrogen').val(row.nitrogen);
            $('#editPhosphorus').val(row.phosphorus);
            $('#editPotassium').val(row.potassium);
            $('#editLocation').val(row.location);

            $('#editModal').css('display', 'block');
        }

        function closeEditModal() {
            $('#editModal').css('display', 'none');
        }

        function openAddModal() {
            $('#addModal').css('display', 'block');
        }

        function closeAddModal() {
            $('#addModal').css('display', 'none');
            $('#addForm')[0].reset();
        }

        // Delete function
        function deleteRow(id) {
            if (!confirm('Are you sure you want to delete this data?')) {
                return;
            }

            $.ajax({
                url: `/api/data/${id}`,
                method: 'DELETE',
                success: function(response) {
                    alert('Data deleted successfully');
                    loadData(false);
                },
                error: function(xhr) {
                    alert('Error deleting data');
                }
            });
        }
    </script>
</body>
</html>
